name: Package Application with Pyinstaller

on:
  push:
    tags:
    - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-24.04
    steps:
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref }}
        draft: true
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  build_linux:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build Linux executable in Docker (Ubuntu 22.04 for GLIBC compatibility)
      run: |
        docker build --platform linux/amd64 -f Dockerfile.ubuntu22 -t distance-estimation-builder .
        docker create --name builder distance-estimation-builder
        docker cp builder:/app/dist/DistanceEstimation ./DistanceEstimation
        docker rm builder
    # - name: Test CLI
    #   run: |
    #     chmod +x ./DistanceEstimation
    #     docker run --platform linux/amd64 --rm -v $(pwd)/DistanceEstimation:/app/DistanceEstimation ubuntu:22.04 /app/DistanceEstimation --cli --help
    - name: Upload artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./DistanceEstimation
        asset_name: DistanceEstimation_linux_x64
        asset_content_type: application/x-executable
  build_macos_x64:
    needs: release
    runs-on: macos-15-intel
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install requirements
      run: pip install -r requirements.txt
    - name: Run PyInstaller
      run: pyinstaller main.spec
    - name: Test CLI
      run: ./dist/DistanceEstimation.app/Contents/MacOS/DistanceEstimation --cli --help
    - name: Sign
      env:
        APPLE_NOTARIZATION_USER_ID: ${{ secrets.APPLE_NOTARIZATION_USER_ID }}
        APPLE_NOTARIZATION_TEAM_ID: ${{ secrets.APPLE_NOTARIZATION_TEAM_ID }}
        APPLE_NOTARIZATION_PASSWORD: ${{ secrets.APPLE_NOTARIZATION_PASSWORD }}
        APPLE_CODESIGNING_PASSWORD: ${{ secrets.APPLE_CODESIGNING_PASSWORD }}
        APPLE_CODESIGNING_CERTIFICATE: ${{ secrets.APPLE_CODESIGNING_CERTIFICATE }}
        APPLE_CODESIGNING_ID: ${{ secrets.APPLE_CODESIGNING_ID }}
      run: ./scripts/macos_codesign.sh
    - name: Package as DMG file
      run: dmgbuild -s dmgbuild_settings.py DistanceEstimation dist/DistanceEstimation.dmg
    - name: Upload artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./dist/DistanceEstimation.dmg
        asset_name: DistanceEstimation_mac_x64.dmg
        asset_content_type: application/octet-stream
  build_macos_arm64:
    needs: release
    runs-on: macos-15
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install requirements
      run: pip install -r requirements.txt
    - name: Run PyInstaller
      run: pyinstaller main.spec
    - name: Test CLI
      run: ./dist/DistanceEstimation.app/Contents/MacOS/DistanceEstimation --cli --help
    - name: Sign
      env:
        APPLE_NOTARIZATION_USER_ID: ${{ secrets.APPLE_NOTARIZATION_USER_ID }}
        APPLE_NOTARIZATION_TEAM_ID: ${{ secrets.APPLE_NOTARIZATION_TEAM_ID }}
        APPLE_NOTARIZATION_PASSWORD: ${{ secrets.APPLE_NOTARIZATION_PASSWORD }}
        APPLE_CODESIGNING_PASSWORD: ${{ secrets.APPLE_CODESIGNING_PASSWORD }}
        APPLE_CODESIGNING_CERTIFICATE: ${{ secrets.APPLE_CODESIGNING_CERTIFICATE }}
        APPLE_CODESIGNING_ID: ${{ secrets.APPLE_CODESIGNING_ID }}
      run: ./scripts/macos_codesign.sh
    - name: Package as DMG file
      run: dmgbuild -s dmgbuild_settings.py DistanceEstimation dist/DistanceEstimation.dmg
    - name: Upload artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./dist/DistanceEstimation.dmg
        asset_name: DistanceEstimation_mac_arm64.dmg
        asset_content_type: application/octet-stream
  build_windows:
    needs: release
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install requirements
      run: pip install -r requirements.txt
    - name: Run PyInstaller
      run: pyinstaller main.spec
    - name: Test CLI
      run: .\dist\DistanceEstimation.exe --cli --help
    - name: Upload artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./dist/DistanceEstimation.exe
        asset_name: DistanceEstimation_win_x64.exe
        asset_content_type: application/vnd.microsoft.portable-executable
